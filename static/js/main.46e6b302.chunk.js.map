{"version":3,"sources":["context.js","reducer.js","components/TodoForm.js","components/TodoHeader.js","components/TodoList.js","index.js","usePersist.js"],"names":["Store","React","createContext","todos","reducer","state","action","type","payload","includes","filter","t","TodoForm","dispatch","useContext","useState","todo","setTodo","handleToAdd","Container","maxWidth","align","TextField","label","value","autoFocus","placeholder","onKeyUp","e","keyCode","onChange","target","margin","fullWidth","Button","variant","onClick","color","TodoHeader","props","children","TodoList","count","header","length","className","List","map","ListItem","key","ListItemText","primary","Fab","aria-label","style","marginLeft","ReactDOM","render","globalStore","context","persistedContext","localStorage","getItem","JSON","parse","usePersistedContext","useEffect","setItem","stringify","usePersistedReducer","useReducer","CssBaseline","Typography","Provider","document","getElementById"],"mappings":"qOAaeA,EATDC,IAAMC,cAAc,CAChCC,MAAO,CAEL,aACA,YACA,iB,mkBCTW,SAASC,EAAQC,EAAOC,GACrC,OAAQA,EAAOC,MACb,IAAK,WAEH,OAAKD,EAAOE,QAIRH,EAAMF,MAAMM,SAASH,EAAOE,SACvBH,EAEF,EAAP,GACKA,EADL,CAEEF,MAAM,GAAD,mBAAME,EAAMF,OAAZ,CAAmBG,EAAOE,YARxBH,EAUX,IAAK,WACH,OAAO,EAAP,GACKA,EADL,CAEEF,MAAOE,EAAMF,MAAMO,OAAO,SAAAC,GAAC,OAAIA,IAAML,EAAOE,YAEhD,QACE,OAAOH,G,oBCbE,SAASO,IAAY,IAC3BC,EAAYC,qBAAWd,GAAvBa,SAD0B,EAKTE,mBAAS,IALA,mBAK1BC,EAL0B,KAKpBC,EALoB,KAejC,SAASC,IACPL,EAAS,CAAEN,KAAM,WAAYC,QAASQ,IACtCC,EAAQ,IAGV,OACE,oCACE,kBAACE,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAM,UAC7B,kBAACC,EAAA,EAAD,CACEC,MAAM,OACNC,MAAOR,EACPS,WAAW,EACXC,YAAY,iBACZC,QAjBR,SAA0BC,GACP,KAAdA,EAAEC,SAAgBX,KAiBfY,SAtBR,SAA0BF,GACxBX,EAAQW,EAAEG,OAAOP,QAsBXQ,OAAO,SACPC,WAAS,IAEX,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAASlB,EACTmB,MAAM,WAHR,S,qDCvCKC,EAAa,SAAAC,GAAK,OAC7B,6BACE,yCACA,6BAAMA,EAAMC,YCQD,SAASC,IAAY,IAGhBC,EAHe,EACP5B,qBAAWd,GAA9BK,EAD0B,EAC1BA,MAAOQ,EADmB,EACnBA,SAIV8B,EACqB,IAAvBtC,EAAMF,MAAMyC,OACV,qEAEA,kBAAC,EAAD,KACE,0BAAMC,UAAU,gBAPJH,EAO6BrC,EAAMF,MAAMyC,QAPxB,EAAR,oBAAyBF,EAAzB,8BAAsDA,EAAtD,YAUzB,OACE,6BACGC,EACD,kBAACG,EAAA,EAAD,KACGzC,EAAMF,MAAM4C,IAAI,SAAApC,GAAC,OAChB,kBAACqC,EAAA,EAAD,CAAUC,IAAKtC,GACb,kBAACuC,EAAA,EAAD,CAAcC,QAASxC,IACvB,kBAACyC,EAAA,EAAD,CACEf,MAAM,UACNgB,aAAW,MACXC,MAAO,CAAEC,WAAY,IACrBnB,QAAS,kBAAMvB,EAAS,CAAEN,KAAM,WAAYC,QAASG,MAErD,kBAAC,IAAD,YCChB6C,IAASC,OAAO,kBAxBhB,WAEE,IAAMC,ECdD,SAA6BC,GAAyB,IAAhBV,EAAe,uDAAT,QAC3CW,EAAmBC,aAAaC,QAAQb,GAC9C,OAAOW,EAAmBG,KAAKC,MAAMJ,GAAoBD,EDYrCM,CAAoBnD,qBAAWd,IAFtC,ECNR,YAAgE,IAAD,mBAAjCK,EAAiC,KAA1BQ,EAA0B,KAAfoC,EAAe,uDAAT,QAE3D,OADAiB,oBAAU,kBAAML,aAAaM,QAAQlB,EAAKc,KAAKK,UAAU/D,KAAS,CAACA,IAC5D,CAACA,EAAOQ,GDSWwD,CACtBC,qBAAWlE,EAASsD,GACpB,SAPS,mBAKNrD,EALM,KAKCQ,EALD,KASb,OAEE,oCACE,kBAAC0D,EAAA,EAAD,MACA,kBAACpD,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACoD,EAAA,EAAD,CAAYrC,QAAQ,KAAKd,MAAM,UAA/B,4BACA,kBAAC,EAAMoD,SAAP,CAAgBjD,MAAO,CAACnB,QAAOQ,aAC7B,kBAACD,EAAD,MACA,kBAAC6B,EAAD,UAOM,MAASiC,SAASC,eAAe,W","file":"static/js/main.46e6b302.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Store Context is the global context that is managed by reducers.\r\n\r\nconst Store = React.createContext({\r\n  todos: [\r\n    //Initial Fake Data\r\n    'Buy a milk',\r\n    'Fiu FÃ³',\r\n    'Smooke Weed'\r\n  ]\r\n});\r\n\r\nexport default Store;","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      // return current state if empty\r\n      if (!action.payload) {\r\n        return state;\r\n      }\r\n      // return current state if duplicate\r\n      if (state.todos.includes(action.payload)) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload]\r\n      };\r\n    case \"COMPLETE\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(t => t !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Store from '../context';\r\n\r\nexport default function TodoForm() {\r\n  const {dispatch} = useContext(Store);\r\n\r\n  // Creating a local state to have currently writing\r\n  // todo item that will be sent to the global store.\r\n  const [todo, setTodo] = useState('');\r\n\r\n  function handleTodoChange(e) {\r\n    setTodo(e.target.value);\r\n  }\r\n\r\n  function handleSubmitForm(e) {\r\n    if(e.keyCode === 13) handleToAdd();\r\n  }\r\n\r\n  function handleToAdd() {\r\n    dispatch({ type: 'ADD_TODO', payload: todo })\r\n    setTodo('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth='md' align='center'>\r\n        <TextField\r\n          label=\"Todo\"\r\n          value={todo}\r\n          autoFocus={true}\r\n          placeholder=\"Enter new todo\"\r\n          onKeyUp={handleSubmitForm}\r\n          onChange={handleTodoChange}\r\n          margin=\"normal\"\r\n          fullWidth\r\n        />\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleToAdd}\r\n          color='primary'  \r\n          >\r\n          ADD\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const TodoHeader = props => (\r\n  <div>\r\n    <h5>Todo List</h5>\r\n    <div>{props.children}</div>\r\n  </div>\r\n);\r\n\r\n","import React, { useContext } from 'react';\r\n\r\nimport Store from '../context';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { TodoHeader } from './TodoHeader';\r\n\r\nexport default function TodoList() {\r\n  const {state, dispatch} = useContext(Store);\r\n\r\n  const pluralize = count => count > 1 ? `There are ${count} todos.` : `There is ${count} todo.`;\r\n\r\n  let header =\r\n    state.todos.length === 0 ? (\r\n      <h4>Yay! All todos are done! Take a rest!</h4>\r\n    ) : (\r\n      <TodoHeader>\r\n        <span className=\"float-right\">{pluralize(state.todos.length)}</span>\r\n      </TodoHeader>\r\n    );\r\n    return (\r\n      <div>\r\n        {header}\r\n        <List>\r\n          {state.todos.map(t => (\r\n            <ListItem key={t}>\r\n              <ListItemText primary={t} />\r\n              <Fab \r\n                color=\"success\" \r\n                aria-label=\"add\"\r\n                style={{ marginLeft: 10 }}\r\n                onClick={() => dispatch({ type: \"COMPLETE\", payload: t })}\r\n                >\r\n                <CheckIcon />\r\n              </Fab>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useContext, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport Store from './context';\nimport reducer from \"./reducer\";\n\nimport { usePersistedContext, usePersistedReducer } from \"./usePersist\";\n\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  // create a global store to store the state\n  const globalStore = usePersistedContext(useContext(Store));\n\n  // `todos` will be a state manager to manage state.\n  const [state, dispatch] = usePersistedReducer(\n      useReducer(reducer, globalStore), \n      'state' // The localStorage key\n    );\n  return (\n    // State.Provider passes the state and dispatcher to the down\n    <>\n      <CssBaseline />\n      <Container maxWidth='md'>\n        <Typography variant='h3' align='center'>Todo List w/ React Hooks</Typography>\n        <Store.Provider value={{state, dispatch}}>\n          <TodoForm />\n          <TodoList />\n        </Store.Provider>\n      </Container>\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import { useEffect } from \"react\";\r\n\r\n\r\n// Accepts `useContext` as first parameter and returns cached context.\r\nexport function usePersistedContext(context, key = \"state\") {\r\n  const persistedContext = localStorage.getItem(key);\r\n  return persistedContext ? JSON.parse(persistedContext) : context;\r\n}\r\n\r\n// Accepts `useReducer` as first parameter and returns cached reducer.\r\nexport function usePersistedReducer([state, dispatch], key = \"state\") {\r\n  useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [state]);\r\n  return [state, dispatch];\r\n}\r\n"],"sourceRoot":""}